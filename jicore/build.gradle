apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.dcendents.android-maven'
apply from: 'dependencies.gradle'


repositories {
    mavenCentral()
    google()
    jcenter()
    maven { url "https://jitpack.io" }
}

buildscript {
    apply from: 'dependencies.gradle'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}

group = 'com.github.ngocji'
version = '1.0'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

}

dependencies {
    api androidx.constraintlayout

    api libraries.kotlin
    api libraries.kotlinReflect
    api androidx.appcompat
    api androidx.recyclerView
    api androidx.cardView
    api androidx.material
    api androidx.annotations

    api androidx.multidex

    api libraries.glide
    api libraries.eventBus
    api rx.rxKotlin
    api rx.rxAndroid

    api gson.code

    api retrofit.core
    api retrofit.convertergson
    api retrofit.adapterrxjava
    api retrofit.logging
}



task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task classesJar(type: Jar) {
    from "$buildDir/intermediates/classes/release"
}

artifacts {
    archives classesJar
    archives javadocJar
    archives sourcesJar
}

